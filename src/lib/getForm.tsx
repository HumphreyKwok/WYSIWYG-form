import prisma from "@/lib/db";

export const getDefaultForm = async () => {
  const form = await prisma.form.findFirst({
    where: { name: "default form" },
    include: { fields: true },
  });

  //Check if there is at least one form in the table,
  //if not found then create a form with a default field
  if (!form) {
    const createdForm = await prisma.form.create({
      data: {
        name: "default form",
        description:
          "default form generated by the system, your final form would look like this",
        fields: {
          createMany: {
            data: [
              {
                name: "name",
                label: "Name",
                placeholder: "Name...",
                description: "How should we call you?",
                type: "Input",
                required: true,
              },
              {
                name: "email",
                label: "email",
                placeholder: "Email...",
                description: "How can we reach you back?",
                type: "Email",
                required: true,
              },
            ],
          },
        },
      },
      include: { fields: true },
    });
    return createdForm;
  }

  //If there is no field in the default form,
  //recreate default fields and return the updated form
  if (form.fields.length === 0) {
    const updatedForm = await prisma.form.update({
      where: {
        id: form.id,
      },
      data: {
        fields: {
          createMany: {
            data: [
              {
                name: "name",
                label: "Name",
                placeholder: "Name...",
                description: "How should we call you?",
                type: "Input",
                required: true,
              },
              {
                name: "email",
                label: "Email",
                placeholder: "Email...",
                description: "How can we reach you back?",
                type: "Email",
                required: true,
              },
            ],
          },
        },
      },
      include: {
        fields: true,
      },
    });

    return updatedForm;
  }

  return form;
};
